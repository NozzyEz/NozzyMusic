{"version":3,"sources":["data.js","components/PlaylistItem.jsx","components/Playlist.jsx","components/Player.jsx","components/Track.jsx","components/Nav.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ChillHop","id","uuidv4","name","author","cover","colors","audio","active","PlaylistItem","track","audioRef","tracks","setCurrent","isPlaying","isDark","e","a","current","play","pause","className","onClick","src","alt","Playlist","isPlaylistOpen","map","Player","songInfo","setSongInfo","setIsPlaying","hasRepeatOne","setRepeatOne","hasRepeatAll","setRepeatAll","hasShuffle","setShuffle","useState","repeatVal","setRepeatVal","shuffleVal","setShuffleVal","changeTrackHandler","direction","currentIndex","findIndex","state","length","formatTime","time","Math","floor","slice","trackAnimation","transform","animationPercentage","trackStyle","background","currentTime","style","type","min","value","max","duration","onChange","newTime","target","icon","faRandom","size","faStepBackward","faPause","faPlay","faStop","faStepForward","faRetweet","Track","Nav","setIsPlaylistOpen","setDark","faMusic","App","useRef","mobileView","window","matchMedia","matches","data","timeUpdateHandler","percentage","nextIndex","round","random","useEffect","href","rel","ref","onLoadedMetadata","onTimeUpdate","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0f41e64.chunk.js","sourcesContent":["import {v4 as uuidv4} from 'uuid';\n\nfunction ChillHop() {\n  return [\n    {\n      id: uuidv4(),\n      name: 'Evenfall',\n      author: 'Aarigod',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/02/7f102bdde417f6ead9a120b2b931449e5c12b4da-1024x1024.jpg',\n      colors: ['#BAD07B', '#1E170F'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=13007',\n      active: true,\n    },\n    {\n      id: uuidv4(),\n      name: 'Funkaholic',\n      author: 'Flitz & Suppe',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/07/5c2d5b05dfc98afb5ed850ca918f732445b8ca1e-1024x1024.jpg',\n      colors: ['#7A99AD', '#DA8A8F'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=8242',\n      active: false,\n    },\n    {\n      id: uuidv4(),\n      name: 'Home Court',\n      author: 'Blue Wednesday & Shopan',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/12/33a2a875828118a3ff260638a88362936104879a-1024x1024.jpg',\n      colors: ['#5058A0', '#A56D9E'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=11233',\n      active: false,\n    },\n    {\n      id: uuidv4(),\n      name: 'Peaches',\n      author: 'Philanthrope & The Field Tapes',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/11/8a0c857ddad531279d0757f5362380a6837b1b69-1024x1024.jpg',\n      colors: ['#8AA85F', '#9BB2B6'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=11246',\n      active: false,\n    },\n    {\n      id: uuidv4(),\n      name: 'Habitat',\n      author: 'Philanthrope & kendall Miles',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg',\n      colors: ['#633924', '#AE463B'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=10265',\n      active: false,\n    },\n    {\n      id: uuidv4(),\n      name: 'New Horizons',\n      author: 'Nymano & Epektase',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg',\n      colors: ['#574F8C', '#171312'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=10142',\n      active: false,\n    },\n    {\n      id: uuidv4(),\n      name: 'Sombre',\n      author: 'Psalm Trees & Guillaume Muschalle',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/07/6fe1f08735f7c54e10e72d2f9d1bec4c78ca01bf-1024x1024.jpg',\n      colors: ['#B1856C', '#DAA495'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=9504',\n      active: false,\n    },\n    {\n      id: uuidv4(),\n      name: 'Bright Mornings',\n      author: 'Sundreamer & Edapollo',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/02/08cbb0848f669e1bd8b5a5152c4b7d20edf1b499-1024x1024.jpg',\n      colors: ['#15201E', '#320B13'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=9212',\n      active: false,\n    },\n    {\n      id: uuidv4(),\n      name: 'Far From Home',\n      author: 'Toonorth',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/07/ad7fc4dda66ba986466fd2b1c416b0b12411ee28-1024x1024.jpg',\n      colors: ['#70A39C', '#9ABC97'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=8127',\n      active: false,\n    },\n    {\n      id: uuidv4(),\n      name: 'Backyard Puddles',\n      author: 'Sleepy Fish',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2020/09/c209a7df7b9bc133dfff73ce86ebc3c57c2b73dd-1024x1024.jpg',\n      colors: ['#2E304F', '#7ABBCF'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=10032',\n      active: false,\n    },\n  ];\n}\n\nexport default ChillHop;\n","function PlaylistItem({track, tracks, audioRef, setCurrent, isPlaying, isDark}) {\n  //* change current track based on which one is clicked\n  async function setCurrentHandler(e) {\n    await setCurrent(track);\n    isPlaying ? audioRef.current.play() : audioRef.current.pause();\n  }\n  return (\n    <div\n      className={`track-container ${track.active ? 'selected' : ''} ${isDark ? 'dark-mode' : ''}`}\n      onClick={setCurrentHandler}\n    >\n      <img className=\"track-thumbnail\" src={track.cover} alt=\"Album art\" />\n      <div className=\"track-details\">\n        <h4 className=\"track-name\">{track.name}</h4>\n        <p className=\"track-author\">{track.author}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default PlaylistItem;\n","import PlaylistItem from './PlaylistItem';\n\nfunction Playlist({tracks, setCurrent, audioRef, isPlaying, isPlaylistOpen, isDark}) {\n  return (\n    <div className={`playlist ${isPlaylistOpen ? 'active' : ''} ${isDark ? 'dark-mode' : ''}`}>\n      <h3>Playlist</h3>\n      <div className=\"playlist-container\">\n        {tracks.map(track => (\n          <PlaylistItem\n            track={track}\n            isDark={isDark}\n            audioRef={audioRef}\n            tracks={tracks}\n            setCurrent={setCurrent}\n            key={track.id}\n            isPlaying={isPlaying}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Playlist;\n","import {useState} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n  faPlay,\n  faPause,\n  faStop,\n  faStepBackward,\n  faStepForward,\n  faRetweet,\n  faRandom,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({\n  audioRef,\n  current,\n  songInfo,\n  setSongInfo,\n  isPlaying,\n  setIsPlaying,\n  hasRepeatOne,\n  setRepeatOne,\n  hasRepeatAll,\n  setRepeatAll,\n  hasShuffle,\n  setShuffle,\n  setCurrent,\n  tracks,\n  isDark,\n}) => {\n  const [repeatVal, setRepeatVal] = useState('NONE');\n  const [shuffleVal, setShuffleVal] = useState('OFF');\n\n  // Event handlers\n  //* updates the audio playback based on which value is set in the slider\n  function sliderHandler(e) {\n    const newTime = e.target.value;\n    setSongInfo({...songInfo, currentTime: newTime});\n    audioRef.current.currentTime = newTime;\n  }\n\n  //* Checks to see if music is playing, and either pauses or plays music depending on it\n  function playBtnHandler() {\n    if (!isPlaying) {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    }\n  }\n  //* Stops music and resets the time to the beginning of the music being played\n  function stopBtnHandler() {\n    audioRef.current.pause();\n    audioRef.current.currentTime = 0;\n    setIsPlaying(false);\n  }\n  //* changes track based on which button has been pressed\n  async function changeTrackHandler(direction) {\n    let currentIndex = tracks.findIndex(state => state.id === current.id);\n    // Checks if the index goes to -1 and plays the last track in the playlist then\n    if (direction === 'previous') {\n      (currentIndex - 1) % tracks.length === -1\n        ? await setCurrent(tracks[tracks.length - 1])\n        : await setCurrent(tracks[(currentIndex - 1) % tracks.length]);\n    } else {\n      // Plays the next track, or the first, if the index gets out of bounds\n      await setCurrent(tracks[(currentIndex + 1) % tracks.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  }\n\n  //* handles repeat functionality on button press\n  function repeatBtnHandler() {\n    if (!hasRepeatOne && !hasRepeatAll) {\n      setRepeatOne(true);\n      setRepeatVal('ONE');\n    } else if (hasRepeatOne) {\n      setRepeatOne(false);\n      setRepeatAll(true);\n      setRepeatVal('ALL');\n    } else {\n      setRepeatAll(false);\n      setRepeatVal('NONE');\n    }\n  }\n\n  //* handles if shuffle should be turned on based on user input\n  function shuffleBtnHandler() {\n    if (!hasShuffle) {\n      setShuffleVal('ON');\n      setShuffle(true);\n    } else {\n      setShuffleVal('OFF');\n      setShuffle(false);\n    }\n    return;\n  }\n\n  //* take input time in seconds and converts it to a minutes and seconds string for presentation\n  //* or if time is falsey set it to 0:00\n  const formatTime = time =>\n    time ? Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2) : '0:00';\n\n  //* style for the track\n  const trackAnimation = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n\n  const trackStyle = {\n    background: `linear-gradient(to right, ${current.colors[0]}, ${current.colors[1]})`,\n  };\n\n  return (\n    <div className={`player ${isDark ? 'dark-mode' : ''}`}>\n      <div className=\"time-control\">\n        <p>{formatTime(songInfo.currentTime)}</p>\n        <div style={trackStyle} className=\"track\">\n          <input\n            type=\"range\"\n            name=\"time-slider\"\n            id=\"time-slider\"\n            min={0}\n            value={Math.floor(songInfo.currentTime)}\n            max={songInfo.duration || 0}\n            onChange={sliderHandler}\n          />\n          <div style={trackAnimation} className=\"animate-track\"></div>\n        </div>\n        <p>{formatTime(songInfo.duration)}</p>\n      </div>\n      <div className=\"play-control\">\n        <span className=\"shuffle-info\">Shuffle {shuffleVal}</span>\n        <div className=\"play-btns\">\n          <FontAwesomeIcon\n            onClick={shuffleBtnHandler}\n            className=\"shuffle-btn\"\n            icon={faRandom}\n            size=\"3x\"\n          />\n          <FontAwesomeIcon\n            onClick={() => changeTrackHandler('previous')}\n            className=\"previous-btn\"\n            icon={faStepBackward}\n            size=\"3x\"\n          />\n          {/* setting either a play or a pause button depending if music is being played */}\n          <FontAwesomeIcon\n            onClick={playBtnHandler}\n            className=\"play-btn\"\n            icon={!isPlaying ? faPlay : faPause}\n            size=\"3x\"\n          />\n          <FontAwesomeIcon onClick={stopBtnHandler} className=\"stop-btn\" icon={faStop} size=\"3x\" />\n          <FontAwesomeIcon\n            onClick={() => changeTrackHandler('next')}\n            className=\"next-btn\"\n            icon={faStepForward}\n            size=\"3x\"\n          />\n          <FontAwesomeIcon onClick={repeatBtnHandler} icon={faRetweet} size=\"3x\" />\n        </div>\n        <span className=\"repeat-info\">Repeat {repeatVal}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","function Track({current, isPlaying, isDark}) {\n  return (\n    <div className={`song-container ${isDark ? 'dark-mode' : ''}`}>\n      <img\n        className={`song-cover ${isPlaying ? 'active' : ''}`}\n        src={current.cover}\n        alt=\"Album art\"\n      />\n      <h1 className={`song-name ${isPlaying ? 'active' : ''}`}>{current.name}</h1>\n      <h3 className={`song-author ${isPlaying ? 'active' : ''}`}>{current.author}</h3>\n    </div>\n  );\n}\n\nexport default Track;\n","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faMusic} from '@fortawesome/free-solid-svg-icons';\n\nfunction Nav({isPlaylistOpen, setIsPlaylistOpen, isDark, setDark}) {\n  async function darkModeHandler() {\n    !isDark ? await setDark(true) : await setDark(false);\n  }\n\n  return (\n    <nav className={`nav-bar ${isDark ? 'dark-mode' : ''}`}>\n      <h2>NozzyMusic</h2>\n      <button className=\"darkmode-btn\" onClick={darkModeHandler}>\n        Dark Mode Toggle\n      </button>\n      <button onClick={() => setIsPlaylistOpen(!isPlaylistOpen)} className=\"playlist-btn\">\n        <FontAwesomeIcon icon={faMusic} />\n        <span> Playlist </span>\n      </button>\n    </nav>\n  );\n}\n\nexport default Nav;\n","//React imports\nimport {useEffect, useState, useRef} from 'react';\n// styles\nimport './scss/App.scss';\n\n//music\nimport data from './data';\n\n// Components\nimport Playlist from './components/Playlist';\nimport Player from './components/Player';\nimport Track from './components/Track';\nimport Nav from './components/Nav';\n\n// main app\nfunction App() {\n  const audioRef = useRef(null);\n\n  // Check if on mobile\n  const mql = window.matchMedia('(max-width: 500px');\n  let mobileView = mql.matches;\n\n  // state\n  const [isDark, setDark] = useState(false);\n  const [tracks] = useState(data());\n  const [current, setCurrent] = useState(tracks[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [hasRepeatOne, setRepeatOne] = useState(false);\n  const [hasRepeatAll, setRepeatAll] = useState(false);\n  const [hasShuffle, setShuffle] = useState(false);\n  const [isPlaylistOpen, setIsPlaylistOpen] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n\n  //* Effect that makes sure the correct track is marked as active when a track is changed\n  useEffect(() => {\n    tracks.map(state => (state === current ? (state.active = true) : (state.active = false)));\n  }, [current, tracks]); // We can pass it dependencies so it only runs when those states are changed\n\n  //* This specifically triggers when music is playing, then sets the songInfo accordingly\n  //* so we can show time\n  function timeUpdateHandler(e) {\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n    const percentage = (currentTime / duration) * 100;\n\n    setSongInfo({...songInfo, currentTime: currentTime, duration, animationPercentage: percentage});\n  }\n\n  function playlistCloseHandler() {\n    if (isPlaylistOpen && mobileView) setIsPlaylistOpen(!isPlaylistOpen);\n  }\n\n  //* handler for when a track is ended, here it checks if user has repeat one, all or none selected and behaves accordingly\n  async function trackEndHandler() {\n    let currentIndex = tracks.findIndex(state => state.id === current.id);\n\n    if (hasRepeatOne) {\n      // console.log('repeat one ran');\n      audioRef.current.currentTime = 0;\n    } else if (hasRepeatAll) {\n      // console.log('repeat all ran');\n      await setCurrent(tracks[(currentIndex + 1) % tracks.length]);\n    } else {\n      // console.log('repeat none ran');\n      if (current.id === tracks[tracks.length - 1].id) {\n        // console.log('last track detected');\n        await setIsPlaying(false);\n        audioRef.current.pause();\n        audioRef.current.currentTime = 0;\n        return;\n      } else {\n        await setCurrent(tracks[(currentIndex + 1) % tracks.length]);\n      }\n    }\n    if (hasShuffle && !hasRepeatOne) {\n      const nextIndex = Math.round(Math.random() * 100) % tracks.length;\n      await setCurrent(tracks[nextIndex]);\n    }\n    audioRef.current.play();\n  }\n\n  // render\n  return (\n    <div className=\"App\">\n      <div className=\"app-container\" onClick={playlistCloseHandler}>\n        <Nav\n          isPlaylistOpen={isPlaylistOpen}\n          setIsPlaylistOpen={setIsPlaylistOpen}\n          isDark={isDark}\n          setDark={setDark}\n        />\n        <Track current={current} isPlaying={isPlaying} isDark={isDark} />\n        <Player\n          audioRef={audioRef}\n          isDark={isDark}\n          current={current}\n          songInfo={songInfo}\n          setSongInfo={setSongInfo}\n          isPlaying={isPlaying}\n          setIsPlaying={setIsPlaying}\n          hasRepeatOne={hasRepeatOne}\n          setRepeatOne={setRepeatOne}\n          hasRepeatAll={hasRepeatAll}\n          setRepeatAll={setRepeatAll}\n          hasShuffle={hasShuffle}\n          setShuffle={setShuffle}\n          setCurrent={setCurrent}\n          tracks={tracks}\n        />\n        <footer className={`${isDark ? 'dark-mode' : ''}`}>\n          <h4>Created by: Mark Sahlgreen &copy; 2021</h4>\n          <div className=\"credit\">\n            <h4>Music imported from</h4>\n            <a href=\"https://chillhop.com/\" target=\"_blank\" rel=\"noreferrer\">\n              <img\n                src=\"https://chillhop.com/wp-content/themes/chillhop/assets/images/Chillhop_white.svg\"\n                alt=\"ChillHop Logo\"\n              />\n            </a>\n          </div>\n        </footer>\n      </div>\n      <Playlist\n        tracks={tracks}\n        setCurrent={setCurrent}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        isPlaylistOpen={isPlaylistOpen}\n        isDark={isDark}\n      />\n      <audio\n        ref={audioRef}\n        src={current.audio}\n        onLoadedMetadata={timeUpdateHandler} //Update times initially when player is rendered\n        onTimeUpdate={timeUpdateHandler} // update times when music is being player\n        onEnded={trackEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}